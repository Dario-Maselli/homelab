services:
  dashy:
    image: lissy93/dashy
    container_name: Dashy
    ports:
      - 4000:8080
    # Set any environmental variables
    environment:
      - NODE_ENV=production
    # Specify your user ID and group ID. You can find this by running `id -u` and `id -g`
    #  - UID=1000
    #  - GID=1000
    restart: unless-stopped
    volumes:
      - ./dashy-config.yml:/app/user-data/conf.yml
    # Configure healthchecks
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
  
  cloudflare-ddns:
    container_name: cloudflare-ddns
    image: oznu/cloudflare-ddns:latest
    restart: unless-stopped
    environment:
      - API_KEY=RC9457FE_MoaI9xPIbnVI_AxGq0BPIrGX0XED128
      - ZONE=neroserver.xyz
      - PROXIED=true
      
  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token eyJhIjoiNzg4NDFkNDkyYzdiNGY3M2NlNmFlY2MwNjZhZTAwMjkiLCJ0IjoiYTIxZTllY2EtYThhNy00MGJmLWFlNjMtZDRjMDJlYjc4ZTMzIiwicyI6IlpHWm1Oamt5WW1VdE1UYzJZUzAwTXpkaExXRXpZV1V0T0RnMFltRmxNbUl6TVdaaCJ9
    restart: unless-stopped
  
  nginx-proxy-manager:
    container_name: nginx_proxy_manager
    image: 'jc21/nginx-proxy-manager:latest'
    restart: unless-stopped
    ports:
      # These ports are in format <host-port>:<container-port>
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
      # Add any other Stream port you want to expose
      # - '21:21' # FTP
    environment:
      # Mysql/Maria connection parameters:
      DB_MYSQL_HOST: "nginx-proxy-manager-db"
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: "npm"
      DB_MYSQL_PASSWORD: "npm"
      DB_MYSQL_NAME: "npm"
      # Uncomment this if IPv6 is not enabled on your host
      # DISABLE_IPV6: 'true'
    volumes:
      - D:/homelab/nginx_proxy_manager:/data
      - D:/homelab/letsencrypt:/etc/letsencrypt
    depends_on:
      - nginx-proxy-manager-db

  nginx-proxy-manager-db:
    container_name: nginx_proxy_manager_db
    image: 'jc21/mariadb-aria:latest'
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 'npm'
      MYSQL_DATABASE: 'npm'
      MYSQL_USER: 'npm'
      MYSQL_PASSWORD: 'npm'
      MARIADB_AUTO_UPGRADE: '1'
    volumes:
      - D:/homelab/nginx_proxy_manager_db:/var/lib/mysql
  
  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    # For DHCP it is recommended to remove these ports and instead add: network_mode: "host"
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "3141:80/tcp"
    environment:
      TZ: 'Africa/Johannesburg'
      WEBPASSWORD: 'WhatIsLife?1234'
    volumes:
      - D:/homelab/pihole:/etc/pihole
      - D:/homelab/pihole/dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped

  
  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "D:/homelab/portainer:/data"

  portainer_agent:
    container_name: portainer_agent
    image: portainer/agent:2.19.5
    restart: always
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "D:/homelab/portainer:/data"

  watchtower:
    container_name: watchtower
    restart: always
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock