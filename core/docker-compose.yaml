services:
  dashy:
    image: lissy93/dashy
    container_name: dashy
    ports:
      - "5050:8080"
    environment:
      - NODE_ENV=production
    restart: unless-stopped
    volumes:
      - ./dashy-config.yml:/app/user-data/conf.yml
    healthcheck:
      test: ['CMD', 'node', '/app/services/healthcheck']
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashy.rule=Host(`dash.neroserver.xyz`)"
      - "traefik.http.routers.dashy.entrypoints=websecure"
      - "traefik.http.routers.dashy.tls.certresolver=myresolver"
      - "traefik.http.services.dashy.loadbalancer.server.port=8080"
    networks:
      - web
  
  cloudflare-ddns:
    container_name: cloudflare-ddns
    image: oznu/cloudflare-ddns:latest
    restart: unless-stopped
    environment:
      - API_KEY=RC9457FE_MoaI9xPIbnVI_AxGq0BPIrGX0XED128
      - ZONE=neroserver.xyz
      - PROXIED=true
    labels:
      - "traefik.enable=false"
    networks:
      - web

  cloudflared:
    container_name: cloudflared
    image: cloudflare/cloudflared:latest
    command: tunnel --no-autoupdate run --token eyJhIjoiNzg4NDFkNDkyYzdiNGY3M2NlNmFlY2MwNjZhZTAwMjkiLCJ0IjoiYTIxZTllY2EtYThhNy00MGJmLWFlNjMtZDRjMDJlYjc4ZTMzIiwicyI6IlpHWm1Oamt5WW1VdE1UYzJZUzAwTXpkaExXRXpZV1V0T0RnMFltRmxNbUl6TVdaaCJ9
    restart: unless-stopped
    labels:
      - "traefik.enable=false"
    networks:
      - web
  
  traefik:
    image: traefik:latest
    container_name: traefik
    ports:
      - "80:80"
      - "443:443"
      - "81:8080"  # Dashboard 
    environment:
      - CF_DNS_API_TOKEN=n65O1JruyvJ84dE0Uhrs2rZmP5hrSUII66i8tYVQ
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--api.dashboard=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.myresolver.acme.email=dario@neroland.co.za"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "D:/homelab/letsencrypt_traefik:/letsencrypt"
    networks:
      - web

  whoami:
    image: "traefik/whoami"
    container_name: "traefik-whoami"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.whoami.rule=Host(`neroserver.xyz`)"
      - "traefik.http.routers.whoami.entrypoints=web"
    networks:
      - web

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "67:67/udp" # Only required if you are using Pi-hole as your DHCP server
      - "3141:80/tcp"
    environment:
      TZ: 'Africa/Johannesburg'
      WEBPASSWORD: 'WhatIsLife?1234'
    volumes:
      - D:/homelab/pihole:/etc/pihole
      - D:/homelab/pihole/dnsmasq.d:/etc/dnsmasq.d'
    cap_add:
      - NET_ADMIN # Required if you are using Pi-hole as your DHCP server, else not needed
    restart: unless-stopped
    networks:
      - web

  portainer:
    container_name: portainer
    image: portainer/portainer-ce:latest
    restart: always
    ports:
      - "8000:8000"
      - "9443:9443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "D:/homelab/portainer:/data"
    networks:
      - web

  portainer_agent:
    container_name: portainer_agent
    image: portainer/agent:2.19.5
    restart: always
    ports:
      - "9001:9001"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - "D:/homelab/portainer:/data"
    networks:
      - web

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000

  watchtower:
    container_name: watchtower
    restart: always
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
  web:
    driver: bridge
