services:
  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=0
      - PGID=0
      - TZ=Africa/Johannesburg
    volumes:
      - D:/homelab/sonarr/config:/config
      - D:/homelab-data-1/plex:/homelab-data-1
      - E:/homelab-data-2/plex:/homelab-data-2
      - F:/homelab-data-3/plex:/homelab-data-3
      - G:/homelab-data-4/plex:/homelab-data-4
      - D:/homelab-data-1/utorrent/completed:/utorrent/completed
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarr.rule=Host(`sonarr.neroserver.xyz`)"
      - "traefik.http.routers.sonarr.entrypoints=websecure"
      - "traefik.http.routers.sonarr.tls.certresolver=myresolver"
      - "traefik.http.services.sonarr.loadbalancer.server.port=5555"
    ports:
      - 5555:8989
    restart: unless-stopped
    networks:
      - all_the_rrs
    privileged: true 
    dns:
      - 1.1.1.1
      - 8.8.8.8

  wizarr:
    restart: unless-stopped  
    container_name: wizarr
    image: ghcr.io/wizarrrr/wizarr
    ports:
      - 5690:5690
    volumes:
      - D:/homelab/wizarr/database:/data/database
    environment:
      - PUID=1000 #Set UID
      - PGID=1000 #Set GID
      - DISABLE_BUILTIN_AUTH=false #Set to true ONLY if you are using another auth provider (Authelia, Authentik, etc)
      - TZ=Africa/Johannesburg #Set your timezone here

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Africa/Johannesburg
    volumes:
      - D:/homelab/prowlarr/config:/config
    ports:
      - 9999:9696
    restart: unless-stopped
    networks:
      - all_the_rrs
    dns:
      - 1.1.1.1
      - 8.8.8.8

  flaresolverr:
    # DockerHub mirror flaresolverr/flaresolverr:latest
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=Africa/Johannesburg
    ports:
      - "${PORT:-8191}:8191"
    restart: unless-stopped
    networks:
      - all_the_rrs
    dns:
      - 1.1.1.1
      - 8.8.8.8

networks:
  all_the_rrs:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1500  # Use jumbo frames if supported
      com.docker.network.bridge.enable_icc: "true"  # Enable inter-container communication
      com.docker.network.bridge.enable_ip_masquerade: "true"  # Enable IP masquerading
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"  # Bind all container ports to the host
      com.docker.network.bridge.enable_promiscuous_mode: "true"  # Enable promiscuous mode

# docker network create --driver bridge --subnet 192.168.1.0/24 --gateway 192.168.1.1 all_the_rrs